---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.0.1/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  releaseName: lidarr
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s-labs.github.io/helm-charts/
      chart: app-template
      version: 4.0.1
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-helm-charts
        namespace: flux-system
  values:
    controllers:
      main:
        strategy: Recreate
        containers:
          main:
            image:
              repository: ghcr.io/home-operations/lidarr
              pullPolicy: IfNotPresent
              tag: 2.12.4.4658@sha256:2adf4c457faffbc587f7612f96a3f4d50795c5b2e343298aef7e67a91060bd6f
            env:
              TZ: America/Chicago
              RADARR__INSTANCE_NAME: Radarr
              RADARR__APPLICATION_URL: 'https://lidarr.k.${SECRET_DOMAIN}'
              RADARR__LOG_LEVEL: info

    service:
      main:
        controller: main
        ports:
          http:
            port: 8686

    ingress:
      main:
        enabled: true
        className: nginx-internal
        annotations:
          kubernetes.io/tls-acme: "true"
          cert-manager.io/cluster-issuer: letsencrypt-prod
        hosts:
          - host: lidarr.k.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: "Always"

    persistence:
      config:
        enabled: true
        existingClaim: lidarr-config-pvc
      media:
        enabled: true
        existingClaim: nfs-media-pvc
        globalMounts:
          - path: /media