---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.17.10
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    deploymentStrategy:
      type: Recreate
    podAnnotations:
      backup.velero.io/backup-volumes: storage
    #   configmap.reloader.stakater.com/reload: "grafana"
    persistence:
      enabled: true
      storageClassName: rook-ceph-block
      size: 10Gi
      accessModes:
      - ReadWriteOnce
    env:
      GF_EXPLORE_ENABLED: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
    ldap:
      enabled: true
      existingSecret: grafana-ldap-toml
    ingress:
      enabled: true
      ingressClassName: nginx-internal
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-areaspline"
        hajimari.io/instance: "internal"
        hajimari.io/appName: "Grafana"
        hajimari.io/group: "Cluster Ops"
      hosts: ["grafana.k.${SECRET_DOMAIN}"]
      tls:
      - hosts:
        - "grafana.k.${SECRET_DOMAIN}"
        secretName: grafana-cert
    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - grafana-clock-panel
    - vonage-status-panel
    - grafana-worldmap-panel
    serviceMonitor:
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        # cable-modem-stats:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/cable_modem_stats.json
        #   datasource: influxdb
        # Ref: https://grafana.com/grafana/dashboards/2842
        # comcast-sucks:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/comcast_sucks.json
        #   datasource: influxdb
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.7.6/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        # internet-speed:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/internet_speed.json
        #   datasource: influxdb
        # minio-overview:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/minio_overview.json
        #   datasource: influxdb
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        node-exporter-full:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/node_exporter_full.json
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        pihole-dashboard:
          url: https://raw.githubusercontent.com/eko/pihole-exporter/master/grafana/dashboard.json
          datasource: Prometheus
        thanos-dashboard:
          url: https://grafana.com/api/dashboards/12937/revisions/1/download
          datasource: Prometheus
        # TrueNAS:
        #   url: https://grafana.com/api/dashboards/12921/revisions/1/download
        #   datasource: TrueNAS
        # Ref: https://grafana.com/grafana/dashboards/11315
        # unifi-client-insights:
        #   gnetId: 11315
        #   revision: 8
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        # unifi-network-sites:
        #   gnetId: 11311
        #   revision: 4
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        # unifi-uap-insights:
        #   gnetId: 11314
        #   revision: 9
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        # unifi-usw-insights:
        #   gnetId: 11312
        #   revision: 8
        #   datasource: Prometheus
        # ups:
        #   url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/ups.json
        #   datasource: influxdb
        # uptimerobot:
        #   url: https://raw.githubusercontent.com/lekpamartin/uptimerobot_exporter/master/dashboards/grafana.json
        #   datasource: Prometheus
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://thanos-query-http:10902/
          isDefault: true
    grafana.ini:
      server:
        root_url: "https://grafana.k.${SECRET_DOMAIN}"
      # security:
      #   admin_user: "winston@milli.ng"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
  valuesFrom:
  - kind: Secret
    name: "grafana-helm-values"
