---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 8.5.2
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    adminPassword: ${SECRET_GRAFANA_ADMIN_PASSWORD}
    rbac:
      pspEnabled: false
    deploymentStrategy:
      type: Recreate
    podAnnotations:
#       configmap.reloader.stakater.com/reload: "grafana"
    persistence:
      enabled: true
      storageClassName: rook-ceph-block
      size: 10Gi
      accessModes:
      - ReadWriteOnce
    env:
      GF_EXPLORE_ENABLED: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      TZ: America/Chicago
    ldap:
      enabled: true
      config: |-
        [[servers]]
        host = "openldap.kube-system.svc"
        port = 1389
        use_ssl = false
        start_tls = false
        ssl_skip_verify = true
        bind_dn = "cn=${SECRET_LDAP_ADMIN_USERNAME},${SECRET_LDAP_BASE_DN}"
        bind_password = "${SECRET_LDAP_ADMIN_PASSWORD}"
        search_filter = "(cn=%s)"
        search_base_dns = ["ou=users,${SECRET_LDAP_BASE_DN}"]
        [servers.attributes]
        name = "givenName"
        surname = "sn"
        username = "uid"
        member_of = "memberOf"
        email =  "mail"
    ingress:
      enabled: true
      ingressClassName: nginx-external
      hosts: ["grafana.${SECRET_DOMAIN}"]
      tls:
      - hosts:
        - "grafana.${SECRET_DOMAIN}"
        secretName: grafana-cert
    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - grafana-clock-panel
    - vonage-status-panel
    - grafana-worldmap-panel
    serviceMonitor:
      enabled: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/11074-node-exporter-for-prometheus-dashboard-en-v20201010/
        1-node-exporter:
          url: https://grafana.com/api/dashboards/11074/revisions/9/download
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 36
          datasource: Prometheus
        prometheus-exporter-summary:
          url: https://raw.githubusercontent.com/billimek/k8s-gitops/master/monitoring/grafana/dashboards/prometheus_exporter_summary.json
          datasource: Prometheus
        ceph-cluster:
          # renovate: dashboardName="Ceph Cluster"
          gnetId: 2842
          revision: 18
          datasource: Prometheus
        ceph-osd:
          # renovate: dashboardName="Ceph - OSD (Single)"
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        ceph-pools:
          # renovate: dashboardName="Ceph - Pools"
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
        k8s-system-api-server:
          # renovate: dashboardName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 18
          datasource: Prometheus
        k8s-views-global:
          # renovate: dashboardName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        k8s-views-nodes:
          # renovate: dashboardName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        k8s-views-namespaces:
          # renovate: dashboardName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 38
          datasource: Prometheus
        k8s-views-pods:
          # renovate: dashboardName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 32
          datasource: Prometheus
        k8s-volumes:
          # renovate: dashboardName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
        volsync:
          # removate: dashboardName="VolSync Dashboard"
          gnetId: 21356
          revision: 2
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
        # defaultDatasourceEnabled: false
      dashboards:
        enabled: true
        searchNamespace: ALL
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://thanos-query.monitoring.svc.cluster.local:9090
          isDefault: true
    grafana.ini:
      server:
        root_url: "https://grafana.k.${SECRET_DOMAIN}"
      auth.ldap:
        enabled: true
        allow_sign_up: true
        config_file: /etc/grafana/ldap.toml
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
