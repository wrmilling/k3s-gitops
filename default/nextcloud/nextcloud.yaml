---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.0.1/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  releaseName: nextcloud
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 6.6.3
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    podAnnotations:
      reloader.stakater.com/auto: "true"
    image:
      repository: nextcloud
      flavor: apache
      tag: 30.0.5-apache
      pullPolicy: IfNotPresent
    replicaCount: 1
    ingress:
      enabled: true
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
    nextcloud:
      host: cloud.${SECRET_DOMAIN}
      existingSecret:
        enabled: true
        secretName: nextcloud
        usernameKey: username
        passwordKey: password
        smtpHostKey: smtpHost
        smtpUsernameKey: smtpUsername
        smtpPasswordKey: smtpPassword
        tokenKey: metricsTokenKey
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 36
      defaultConfigs:
        .htaccess: true                         # To protect /var/www/html/config
        apache-pretty-urls.config.php: true     # Apache configuration for rewrite urls
        apcu.config.php: true                   # Define APCu as local cache
        apps.config.php: true                   # Apps directory configs
        autoconfig.php: false                   # Used for auto configure database - False cus CNPG Postgre is used instead. Configured in the chart.
        redis.config.php: false                 # Redis default configuration - False cus DragonflyDB(Redis) is used instead. Configured in the chart.
        reverse-proxy.config.php: true          # Reverse proxy default configuration
        s3.config.php: false                    # S3 Object Storage as primary storage - I don't use this for now
        smtp.config.php: false                  # SMTP default configuration via environment variables - False untill i get realy up and running
        swift.config.php: false                 # Swift Object Storage as primary storage - I don't use this for now
        upgrade-disable-web.config.php: true    # disables the web based updater as the default nextcloud docker image does not support it
        imaginary.config.php: true
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array (
            'overwriteprotocol' => 'https',
            'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
            'filelocking.enabled' => 'true',
            'loglevel' => '2',
            'enable_previews' => true,
            'trusted_domains' =>
              [
                'nextcloud',
                'cloud.${SECRET_DOMAIN}'
              ],
            'trusted_proxies' =>
              [
                '10.42.0.0/16',
              ],
            'forwarded_for_headers' =>
              [
                0 => 'X-Forwarded-For',
                1 => 'HTTP_X_FORWARDED_FOR'
              ],
            'default_phone_region' => 'US',
            'allow_local_remote_servers' => true,
            'bulkupload.enabled' => true,
          );
        redis.config.php: |-
          <?php
          $CONFIG = array (
            'memcache.local' => '\\OC\\Memcache\\Redis',
            'memcache.distributed' => '\OC\Memcache\Redis',
            'memcache.locking' => '\OC\Memcache\Redis',
            'redis' => array(
              'host' => 'nextcloud-valkey.default.svc.cluster.local',
              'port' => 6379,
              'password' => '${SECRET_NEXTCLOUD_REDIS_PASS}',
              'timeout' => 1,
              'read_timeout' => 1,
            )
          );
      mail:
        enabled: true
        fromAddress: cloud@${SECRET_DOMAIN}
        domain: ${SECRET_DOMAIN}
        smtp:
          secure: ssl
          port: 587
      objectStore:
        s3:
          enabled: true
          existingSecret: nextcloud
          secretKeys:
            host: objHost
            accessKey: objAccessKey
            secretKey: objSecretKey
            bucket: objBucket
            sse_c_key: objEncKey
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.6
          env:
            - name: INIT_POSTGRES_HOST
              value: shared-psql-v17-rw.default.svc.cluster.local
            - name: INIT_POSTGRES_SUPER_PASS
              value: ${SECRET_CNPG_SUPER_PASS}
            - name: INIT_POSTGRES_DBNAME
              value: nextcloud
            - name: INIT_POSTGRES_USER
              value: nextcloud
            - name: INIT_POSTGRES_PASS
              value: ${SECRET_NEXTCLOUD_DB_PASS}
    extraEnv:
    - name: "TZ"
      value: "America/Chicago"
    redis:
      enabled: false
      # auth:
      #   existingSecret: nextcloud
      #   existingSecretPasswordKey: redisPassword
      # global:
      #   storageClass: rook-ceph-block
    cronjob:
      enabled: true
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: nextcloud
        usernameKey: dbUsername
        passwordKey: dbPassword
        hostKey: dbHost
        databaseKey: dbDatabaseName
    persistence:
      enabled: true
      existingClaim: nextcloud-pvc
    metrics:
      enabled: true
      image:
        repository: xperimental/nextcloud-exporter
        tag: 0.6.2
    imaginary:
      enabled: true
      image:
        repository: h2non/imaginary
        tag: 1.2.4
